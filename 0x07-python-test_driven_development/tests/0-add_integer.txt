-----------------------------------
Test cases for 0-add_integer Module
-----------------------------------

The 0-add_integer Module takes two parameters which can be of type int and float

Usage:
------

Importing module function
    >>> add_integer = __import__('0-add_integer').add_integer

Adding two positive integers (a = 1 and b = 2)
    >>> add_integer(1,2)
    3

Adding smaller positive number to a big negativve number (a = 3 and b = -4)
    >>> add_integer(3,-4)
    -1

Adding one negativve and one positive (a = 5 and b = -4)
    >>> add_integer(5,4)
    1

Adding two negativve numbers (a = -5, and b = - 12)
    >>> add_integer(-5,-12)
    -17

Adding an integer to the Default value(a = 8 and b = 98)
    >>> add_integer(8,98)
    106

Adding a float to an integer (a = 7.4 and b = 4)
    >>> add_integer(7.4,5)
    11

Adding negativve float (a = -4.5 and b = -5.6)
    >>> add_integer(4.5,5.6)
    -9

Adding an integer and a string (a = 5 and b = "school")
    >>> add_integer(5,"school")
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Without argument in the function
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding a letter and a number (a = 4 and b = 'y')
    >>> add_integer(4, 'y')
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

Adding two letters (a = 'y' and b = 't')
    >>> add_integer('y', 'c')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a tuple
    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding an integer and list
    >>> add_integer(12, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing a string
    >>> add_integer("School")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer
